if (!isNeedHelpProjectsModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    sourceSets {
        main {
            if (isNeedHelpProjectsModule.toBoolean()) {
                // 指定这个作为单独运行时的manifest
                manifest.srcFile "src/main/debug/AndroidManifest.xml"

            } else {
                // 指定这个作为集成时的manifest
                manifest.srcFile "src/main/AndroidManifest.xml"
            }
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        if (!isNeedHelpProjectsModule.toBoolean()) {
            applicationId "hz.sc.helpprojects"
        }
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
        ndk {

            //选择要添加的对应cpu类型的.so库
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }

        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "LOG_DEBUG", "false"
            buildConfigField "String", "SYPT_Url", "\"http://47.111.13.4:5000/api/v1/\""

        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "String", "SYPT_Url", "\"http://47.111.13.4:5000/api/v1/\""

        }
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation rootProject.ext.dependencies["junit"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["constraint-layout"]
    implementation rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["okionew"]
    implementation rootProject.ext.dependencies["circleimageview"]
    implementation rootProject.ext.dependencies["align-text-view"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["recyclerview-v7"]
    implementation project(':commonlib')
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["SmartRefreshLayout"]
    implementation rootProject.ext.dependencies["SmartRefreshHeader"]
    implementation rootProject.ext.dependencies["blankj"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["banner"]
    implementation rootProject.ext.dependencies["butterknife"]
    implementation rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["rxjava"]
    implementation rootProject.ext.dependencies["rxandroid"]
    implementation rootProject.ext.dependencies["tablayout"]
    implementation rootProject.ext.dependencies["picasso"]
    implementation rootProject.ext.dependencies["recyclerview"]
    implementation rootProject.ext.dependencies["logging"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    implementation rootProject.ext.dependencies["convenientbanner"]
    implementation rootProject.ext.dependencies["wechat"]
    implementation rootProject.ext.dependencies["pagerslidingtabstrip"]
    implementation rootProject.ext.dependencies["switch-button"]
    implementation rootProject.ext.dependencies["andyoom"]
}
